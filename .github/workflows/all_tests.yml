name: Tests for All WordPress multiple subsites and Canvas configuration
on:
  push:
    branches:
      - main

jobs:
  Test_WordPress_Canvas_Installation_Configuration:
    runs-on: ubuntu-latest

    # Set the maximum duration for this job (in minutes)
    timeout-minutes: 15

    steps:

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Set the Node.js version to 16.x

      - name: Check out code
        uses: actions/checkout@v2

      - name: Print some information about the environment
        run: |
          echo "Running on $(uname -a)"
          echo "Current directory: $PWD"
          ls -l
        
      - name: Test DNS Server domain resolution
        if: false
        run: |
          # Execute the external script.sh file
          chmod +x ./test_dig_resolve_ip.sh
          ./test_dig_resolve_ip.sh

      - name: Test if Web site answers a ping request, but just send one ping request
        if: false
        run: |
          # runner is in Azure, which disables outgoing icmp packets, so this will not work from GitHub actions
          ping -c 1 -W 5 toddbooth.com

          ping_exit_status=$?

          if [ $ping_exit_status -eq 0 ]; then
            echo "Ping successful."
          else
            echo "Ping failed."
            exit 1  # Fail the GitHub Actions task
          fi

      - name: Test if Web site ports 80 and 443 are listening
        if: false
        run: |
          # Execute the external script.sh file
          chmod +x ./test_nc_wp_listen.sh
          ./test_nc_wp_listen.sh

      - name: Test is Web site is serving web pages on ports 80 and 443
        if: false
        run: |
          # Execute the external script.sh file
          chmod +x ./test_curl_website.sh
          ./test_curl_website.sh

      - name: Test Web sites' certificates
        if: false
        run: |
          # Execute the external script.sh file
          chmod +x ./test_curl_certificate.sh
          ./test_curl_certificate.sh

      - name: Test WordPress user names via Bash
        if: false
        env:
          WP_USERNAME: ${{ secrets.WP_USERNAME }}
          WP_KEY: ${{ secrets.WP_KEY }}
        run: |
          chmod +x ./test_wordpress_users.sh
          ./test_wordpress_users.sh
                            
      - name: Test Canvas user names via Python
        if: false
        env:
          CANVAS_TOKEN: ${{ secrets.CANVAS_TOKEN }}
        run: |
          python test_canvas_users.py
                    
      - name: Test WordPress post via Python
        if: false
        env:
          WP_USERNAME: ${{ secrets.WP_USERNAME }}
          WP_KEY: ${{ secrets.WP_KEY }}
          STUDENT_ASSIGNED_NUMBER: ${{ secrets.STUDENT_ASSIGNED_NUMBER }}
        run: |
          python test_wordpress_post.py
            
      - name: Verify WordPress post via Python
        if: false
        env:
          WP_USERNAME: ${{ secrets.WP_USERNAME }}
          WP_KEY: ${{ secrets.WP_KEY }}
          STUDENT_ASSIGNED_NUMBER: ${{ secrets.STUDENT_ASSIGNED_NUMBER }}
          # STUDENT_ASSIGNED_NUMBER: "2222"
        run: |
          python verify_wp_post.py 

          - name: Test WordPress delete 5 posts via Python
          # if: false
          env:
            WP_USERNAME: ${{ secrets.WP_USERNAME }}
            WP_KEY: ${{ secrets.WP_KEY }}
            STUDENT_ASSIGNED_NUMBER: ${{ secrets.STUDENT_ASSIGNED_NUMBER }}
          run: |
            python delete_wp_posts.py
  
      - name: Test WordPress delete 5 pages via Python
        # if: false
        env:
          WP_USERNAME: ${{ secrets.WP_USERNAME }}
          WP_KEY: ${{ secrets.WP_KEY }}
          STUDENT_ASSIGNED_NUMBER: ${{ secrets.STUDENT_ASSIGNED_NUMBER }}
        run: |
          python delete_wp_pages.py

      - name: Test WordPress page via Java
        if: false
        env:
          WP_USERNAME: ${{ secrets.WP_USERNAME }}
          WP_KEY: ${{ secrets.WP_KEY }}
        run: |
          # version 11
          # java -version
          javac WordPressPageCreation.java
          java WordPressPageCreation
          
      - name: Test aws cli and show any list and aws s3 buckets which include the string "d7001d"
        if: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1  # Change to your desired AWS region
        run: |
          which aws
          aws s3 ls | grep d7001d

      - name: Check which version of ansible is installed
        # if: false
        run: |
          ansible --version

      - name: Set up SSH
        # if: false
        env:
          SSH_WORDPRESS_KEY: ${{ secrets.SSH_WORDPRESS_KEY }}
          # SSH_HOME: /home/runner/work/course-103/course-103/.ssh
        run: |
          # home is /home/runner

          mkdir ~/.ssh
          echo "$SSH_WORDPRESS_KEY" > ~/.ssh/wordpress.pem
          chmod 600 ~/.ssh/wordpress.pem
          cp .ssh/config ~/.ssh/config
          ls -l ~/.ssh

          ssh -t wordpress 'echo "Hello bitnami Wordpress server from actions inline commands."'

      - name: Run Ansible playbook
        # if: false
        env:
          ANSIBLE_CONFIG: "ansible/ansible.cfg"
        run: |
          # adhoc one line command test
          ls -l ansible/
          
          # Use 'set -e' to exit immediately if any command fails
          # set -e
          
          ansible wordpress -m command -a "echo Hello bitnami Wordpress server from Ansible."

      - name: Update new Linux server
        env:
          ANSIBLE_CONFIG: "ansible/ansible.cfg"
        run: |
          chmod +x ansible/update_linux_server.sh
          ansible/update_linux_server.sh

      - name: To get here, all tests have passed, so deployment will now begin
        run: |
          echo "All tests have passed, so deployment will now begin here ..."

          